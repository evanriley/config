set number
set mouse=a
set commentary
set surround
set ideajoin
set ideastatusicon=disabled
set highlightedyank
set hlsearch
set ignorecase
set smartcase
set incsearch
set wrapscan 
set clipboard=unnamedplus,unnamed,ideaput
set visualbell
set noerrorbells

let mapleader = " "
let maplocalleader = ","

" avoid accidental pagination while in insert mode (keymap woes).
imap <PageUp> <Space>
imap <PageDown> <Space>

" lsp
nnoremap <Leader>gi :action GotoImplementation<CR>
nnoremap <Leader>gr :action FindUsages<CR>
nnoremap <Leader>lf :action AutoIndentLines<CR>
nnoremap <Leader>ln :action RenameElement<CR>

" easy window navigation
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-h> <c-w>h
nnoremap <c-k> <c-w>k

" comment
nnoremap <leader>gc :action CommentByLineComment<cr>

" clojure
nnoremap <Leader>c :action InsertClojureCommentAtTheFormStart<cr>
nnoremap vaf :action SelectAForm<cr>
nnoremap vif :action SelectInForm<cr>
nnoremap daf :action DeleteAForm<cr>
nnoremap dif :action DeleteInForm<cr>
nnoremap yaf :action YankAForm<cr>
nnoremap yif :action YankInForm<cr>
nnoremap caf :action ChangeAForm<cr>i
nnoremap cif :action ChangeInForm<cr>i

" vim delete and change, with sexps!
map <leader>x :action :cursive.actions.paredit/kill-sexp<CR>
map <leader>d :action :cursive.actions.paredit/kill<CR>
map <leader>c :action :cursive.actions.paredit/kill-sexp<CR>i

" Sexp editing mappings straight from paredit.vim
map <leader>J :action :cursive.actions.paredit/join<CR>
map <leader>O :action :cursive.actions.paredit/split<CR>
map <leader>S :action :cursive.actions.paredit/splice<CR>
map <leader>I :action :cursive.actions.paredit/raise<CR>

" Splice backwards and forwards
map <leader>k :action :cursive.actions.paredit/splice-killing-backwards<CR>
map <leader>j :action :cursive.actions.paredit/splice-killing-forwards<CR>

" Slurp and barf
map <leader>l :action :cursive.actions.paredit/barf-forwards<CR> 
map <leader>h :action :cursive.actions.paredit/slurp-forwards<CR>
map <leader>L :action :cursive.actions.paredit/slurp-backwards<CR>
map <leader>H :action :cursive.actions.paredit/barf-backwards<CR> 

" leader + wrapping symbol for wrapping
map <leader>( :action :cursive.actions.paredit/wrap-paren<CR>
map <leader>[ :action :cursive.actions.paredit/wrap-square<CR>
map <leader>{ :action :cursive.actions.paredit/wrap-curly<CR>
map <leader>" :action :cursive.actions.paredit/wrap-quotes<CR>

" Cycle collection
map <leader>C :action :cursive.actions.paredit/cycle-collection-type<CR>

" Evaluate sexp like in conjure.nvim
map <localleader>ee :action :cursive.repl.actions/run-top-sexp<CR>

" Force a single "parinference" when in paredit mode and reformat
map <leader>rp :action :cursive.actions.paredit/toggle<CR>:action :cursive.actions.paredit/toggle<CR>kj:action :cursive.actions.paredit/toggle<CR>:action ReformatCode<CR>
