#!/usr/bin/env bash

{ # to make sure the entire script downloads
  basedir=$HOME/.dotfiles
  repourl=https://github.com/evanriley/config
  savedir=("bin" ".config" ".github" ".vim")
  current=$(date +"%Y.%m.%d.%H.%M.%S")
  backup=$HOME/.dotfiles_backup/$current

  function config {
    /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
  }

  if [[ -x $(command -v brew) ]]; then
    # Homebrew is already installed, check for updates.
    brew upgrade && brew update
    brew bundle --file=~/bin/Brewfile
  else
    # Homebrew will install Xcode command line tools and brew.
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi

  if [[ ! -x $(command -v git) ]]; then
    echo "Error: Git is not installed!"
    exit 1
  fi

  if [[ -d $basedir ]]; then
    config pull --quiet --rebase origin master || exit 1
    echo "Updated dotfiles."
  else
    rm -rf "$basedir"
    git clone --bare --quiet --depth=1 "$repourl" "$basedir"
    config checkout 2>/dev/null
    if [[ $? != 0 ]]; then
      echo "Backing up pre-existing dotfiles to $current."
      mkdir -p "$backup"
      for d in "${savedir[@]}"; do
        [[ -d $HOME/$d ]] && cp -R "$HOME/$d" "$backup"
      done
      config checkout 2>&1 | egrep "\s+\." | awk {'print $1'} | xargs -I{} mv {} "$backup/"{}
      config checkout -f
    fi
    echo "Checked out dotfiles."
    config config --local status.showUntrackedFiles no
  fi

  if [ "$(uname -m)" = "arm64" ]
    then
    # checks if Rosetta is already installed
    if ! pkgutil --pkg-info=com.apple.pkg.RosettaUpdateAuto > /dev/null 2>&1
    then
      echo "Installing Rosetta"
      # Installs Rosetta2
      softwareupdate --install-rosetta --agree-to-license
    else
      echo "Rosetta is installed"
    fi
  fi

  if [ $SHELL != "/opt/homebrew/bin/fish" ]; then
    shell_path="$(command -v fish)"
    echo "Changing your shell to fish"
    sudo sh -c "echo $shell_path >> /etc/shells"
  else
    echo "shell is already fish"
  fi

  if [ -d "$HOME/.tmux/plugins/tpm" ]; then
    echo "tpm already exist"
  else
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
  fi

  if [[ -x $(command -v rustup) ]]; then
    # Rustup is already installed, check for updates.
    echo "Rustup is already installed"
    rustup update
  else
    # Rustup will be installed.
    /bin/bash -c "(curl https://sh.rustup.rs -sSf | sh -s -- -y --profile default --default-toolchain nightly)"
    source $HOME/.cargo/env
  fi


  if [[ -x $(command -v cargo) ]]; then
    # Install favorite rust tools through cargo. First install binstall, then install tools through binstall
    cargo install cargo-binstall
    cargo binstall --no-confirm fd-find exa bat zoxide starship nu rm-improved rtx-cli coreutils du-dust zellij mprocs ripgrep gitui bob-nvim
  else
    # Rustup will be installed.
    echo "Error, we've somehow reached this point without cargo installed?"
    exit 1
  fi
}
