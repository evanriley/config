# Ruby
use_ruby() {
  local ruby_root=$HOME/.rubies/$1
  load_prefix "$ruby_root"
  layout_ruby
}

# NodeJS
use_nodejs() {
    NODE_VERSION="$1"

    if has fnm; then
        FNM_INTERACTIVE_CLI=false fnm use "$NODE_VERSION" || echo "$(tput setaf 1)fnm install $NODE_VERSION$(tput sgr0)"
        PATH_add $HOME/.fnm/current/bin
    else
        export NVM_DIR=$HOME/.nvm

        type nvm >/dev/null 2>&1 || . ~/.nvm/nvm.sh
        nvm use "$NODE_VERSION"
    fi
}

use_fnm() {
    if has fnm; then
        FNM_INTERACTIVE_CLI=false fnm use
        PATH_add $HOME/.fnm/current/bin
    else
        tput setaf 1
        echo "'fnm' not installed; see https://github.com/Schniz/fnm"
        tput sgr0
   fi
}

# Java
use_java() {
    # Install jabba for management of Java versions
    if ! has jabba; then
        echo "Installing jabba"
        brew install jabba
    fi
    
    # Install the required version of Java if not already installed
    if [[ "$(jabba link $1)" == "" ]]; then
        echo "Java $1 is not installed; attempting to install"
        jabba install $1
    fi

    # Set JAVA_HOME, and load the required version of Java onto the path
    export JAVA_HOME=$(jabba link $1)/Contents/Home
    echo "JAVA_HOME=$JAVA_HOME"
    load_prefix "$JAVA_HOME"
}

# Alternatively, look for a .jabbarc file, and use that as the Java version instead
jabbarc="$(find_up .jabbarc || true)"
if [[ -f "${jabbarc}" ]]; then
    watch_file "${jabbarc}"
    jabba_version=$(cat ${jabbarc} | grep -v "#" | cut -d " " -f2)
    echo "Using ${jabba_version} declared in ${jabbarc}"
    use_java "${jabba_version}"
fi
